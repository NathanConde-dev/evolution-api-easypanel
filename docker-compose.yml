version: '3.9'
services:
  evolution-api:
    build: .
    container_name: evolution_api
    restart: always
    ports:
      - "8080:8080"
    environment:
      # Configurações do PostgreSQL
      DATABASE_ENABLED: "true"
      DATABASE_PROVIDER: "postgresql"
      DATABASE_HOST: "postgres"
      DATABASE_PORT: "5432"
      DATABASE_USERNAME: "admin"
      DATABASE_PASSWORD: "admin_password"
      DATABASE_NAME: "evolution_db"
      DATABASE_SAVE_DATA_INSTANCE: "true"
      DATABASE_SAVE_DATA_NEW_MESSAGE: "true"
      DATABASE_SAVE_MESSAGE_UPDATE: "true"
      DATABASE_SAVE_DATA_CONTACTS: "true"
      DATABASE_SAVE_DATA_CHATS: "true"
      DATABASE_SAVE_DATA_LABELS: "true"
      DATABASE_SAVE_DATA_HISTORIC: "true"

      # Configurações do Redis
      CACHE_REDIS_ENABLED: "true"
      CACHE_REDIS_URI: "redis://evolution_redis:6379"
      CACHE_REDIS_PREFIX_KEY: "evolution"
      CACHE_REDIS_SAVE_INSTANCES: "true"
      CACHE_LOCAL_ENABLED: "true"

      # Chave de autenticação da API
      AUTHENTICATION_API_KEY: "sua-chave-aqui"
    depends_on:
      - redis
      - postgres

  redis:
    image: redis:7
    container_name: evolution_redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:14
    container_name: evolution_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin_password"
      POSTGRES_DB: "evolution_db"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  redis_data:
  postgres_data:
