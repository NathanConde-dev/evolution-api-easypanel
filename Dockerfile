# Usando a imagem oficial da Evolution API
FROM atendai/evolution-api:v2.1.1

# Definindo as variáveis de ambiente
ENV AUTHENTICATION_API_KEY=${AUTHENTICATION_API_KEY} \
    DATABASE_PROVIDER=${DATABASE_PROVIDER} \
    DATABASE_CONNECTION_URI=${DATABASE_CONNECTION_URI} \
    DATABASE_ENABLED=true \
    DATABASE_SAVE_DATA_INSTANCE=${DATABASE_SAVE_DATA_INSTANCE} \
    DATABASE_SAVE_DATA_NEW_MESSAGE=${DATABASE_SAVE_DATA_NEW_MESSAGE} \
    DATABASE_SAVE_MESSAGE_UPDATE=${DATABASE_SAVE_MESSAGE_UPDATE} \
    DATABASE_SAVE_DATA_CONTACTS=${DATABASE_SAVE_DATA_CONTACTS} \
    DATABASE_SAVE_DATA_CHATS=${DATABASE_SAVE_DATA_CHATS} \
    DATABASE_SAVE_DATA_LABELS=${DATABASE_SAVE_DATA_LABELS} \
    DATABASE_SAVE_DATA_HISTORIC=${DATABASE_SAVE_DATA_HISTORIC} \
    CACHE_REDIS_ENABLED=${CACHE_REDIS_ENABLED} \
    CACHE_REDIS_URI=${CACHE_REDIS_URI} \
    CACHE_REDIS_PREFIX_KEY=${CACHE_REDIS_PREFIX_KEY} \
    CACHE_REDIS_SAVE_INSTANCES=${CACHE_REDIS_SAVE_INSTANCES} \
    CACHE_LOCAL_ENABLED=${CACHE_LOCAL_ENABLED} \
    REDIS_HOST=${REDIS_HOST} \
    REDIS_PORT=${REDIS_PORT} \
    REDIS_PASSWORD=${REDIS_PASSWORD} \
    DATABASE_HOST=${DATABASE_HOST} \
    DATABASE_PORT=${DATABASE_PORT} \
    DATABASE_USERNAME=${DATABASE_USERNAME} \
    DATABASE_PASSWORD=${DATABASE_PASSWORD} \
    DATABASE_NAME=${DATABASE_NAME}

# Configurando a URI de conexão do banco de dados dinamicamente
ENV DATABASE_CONNECTION_URI="${DATABASE_PROVIDER}://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}"

# Copiando o script para verificar o banco de dados
COPY wait-for-db.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/wait-for-db.sh

# Expondo a porta da aplicação
EXPOSE 8080

# Configurando diretórios para persistência de logs (opcional)
VOLUME ["/app/logs"]

# Comando para diagnóstico e execução
CMD ["sh", "-c", "/usr/local/bin/wait-for-db.sh && redis-cli -u $CACHE_REDIS_URI ping && npm run start:prod"]
